{"ast":null,"code":"import { of } from 'rxjs';\nimport { blogs } from './blog-data';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// ACCESS CONSTANTS\nexport const NOTION = {\n  bearerToken: 'secret_BH3YLi2FPlQSsqr6CLnVCCvgquRiFu2GAlDRkF2KFC4',\n  database: {\n    api: 'https://api.notion.com/v1/databases',\n    id: 'da246526214a4f90896fbe9aa2ce3627'\n  },\n  page: {\n    api: 'https://api.notion.com/v1/pages',\n    id: '750c2620100f40e988c12432a87dbd9d'\n  }\n};\n// HEADERS\nexport const headerOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${NOTION.bearerToken}`,\n    'Access-Control-Allow-Origin': 'http://localhost:4200'\n  })\n};\nexport let ServiceblogService = /*#__PURE__*/(() => {\n  class ServiceblogService {\n    constructor(http) {\n      this.http = http;\n      this.Blogs = [];\n      this.loginStatusService = false;\n      this.detailId = -1;\n      this.showEdit = false;\n    }\n    getBlog() {\n      return of(blogs);\n    }\n    addPost(bl) {\n      this.Blogs.splice(0, 0, bl);\n    }\n    deletePost(id) {\n      this.Blogs = this.Blogs.filter(b => b.id !== id);\n    }\n    getDatabase() {\n      return this.http.get(NOTION.database.api + '/' + NOTION.database.id, headerOptions);\n    }\n  }\n  ServiceblogService.ɵfac = function ServiceblogService_Factory(t) {\n    return new (t || ServiceblogService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ServiceblogService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServiceblogService,\n    factory: ServiceblogService.ɵfac,\n    providedIn: 'root'\n  });\n  return ServiceblogService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}